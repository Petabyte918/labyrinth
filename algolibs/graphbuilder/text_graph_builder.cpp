#include "text_graph_builder.h"

namespace graph {

namespace mazes {
std::vector<std::string> big_component_maze_9 = {
    "###|#.#|#.#|###|#.#|#.#|###|###|#.#|",
    "#..|#..|...|...|#..|..#|...|...|#..|",
    "#.#|###|###|#.#|###|###|#.#|#.#|###|",
    "------------------------------------",
    "###|###|#.#|#.#|#.#|#.#|#.#|#.#|#.#|",
    "...|...|#.#|#..|#.#|...|..#|#..|#.#|",
    "#.#|#.#|#.#|###|#.#|###|#.#|#.#|#.#|",
    "------------------------------------",
    "#.#|#.#|#.#|#.#|#.#|#.#|#.#|#.#|#.#|",
    "#..|#..|..#|#..|..#|#.#|..#|#..|..#|",
    "#.#|#.#|#.#|#.#|#.#|#.#|#.#|#.#|#.#|",
    "------------------------------------",
    "#.#|#.#|#.#|###|#.#|###|###|###|#.#|",
    "..#|..#|#..|...|...|...|...|...|...|",
    "###|#.#|###|#.#|###|#.#|#.#|#.#|###|",
    "------------------------------------",
    "###|#.#|###|#.#|###|#.#|###|#.#|###|",
    "#..|..#|#..|#..|...|#..|...|#..|...|",
    "#.#|###|#.#|#.#|#.#|###|###|#.#|#.#|",
    "------------------------------------",
    "###|#.#|###|#.#|#.#|#.#|#.#|#.#|#.#|",
    "..#|#..|...|...|#.#|#..|..#|...|#.#|",
    "#.#|#.#|###|###|#.#|#.#|#.#|###|#.#|",
    "------------------------------------",
    "#.#|#.#|###|###|#.#|#.#|#.#|###|#.#|",
    "#..|...|...|...|#.#|#..|..#|...|..#|",
    "###|###|#.#|###|#.#|###|#.#|###|#.#|",
    "------------------------------------",
    "###|###|#.#|#.#|#.#|#.#|#.#|#.#|#.#|",
    "...|...|#.#|#..|#..|...|..#|#..|#.#|",
    "#.#|#.#|#.#|###|#.#|###|#.#|#.#|#.#|",
    "------------------------------------",
    "#.#|#.#|#.#|###|#.#|###|###|###|#.#|",
    "..#|..#|#..|...|...|...|...|...|...|",
    "###|#.#|###|#.#|###|#.#|#.#|#.#|###|",
    "------------------------------------" };
}

StaticGraph TextGraphBuilder::buildGraph() {
    size_t extent{ lines_.size() / lines_per_node };
    for (auto row = 0; row < extent; row++) {
        for (auto column = 0; column < extent; column++) {
            if (lines_[first(row)][second(column)] == '.') {
                addOutPath(Location(row, column), OutPath::North);
            }
            if (lines_[second(row)][third(column)] == '.') {
                addOutPath(Location(row, column), OutPath::East);
            }
            if (lines_[third(row)][second(column)] == '.') {
                addOutPath(Location(row, column), OutPath::South);
            }
            if (lines_[second(row)][first(column)] == '.') {
                addOutPath(Location(row, column), OutPath::West);
            }
        }
    }
    return constructGraph();
}

TextGraphBuilder & TextGraphBuilder::setMaze(const std::vector<std::string> & lines) {
    lines_ = lines;
    return *this;
}

}