#include "graph_builder.h"

namespace graph {

namespace mazes {
std::vector<std::string> big_component_maze_9 = {
    "###|#.#|#.#|###|#.#|#.#|###|###|#.#|",
    "#..|#..|...|...|#..|..#|...|...|#..|",
    "#.#|###|###|#.#|###|###|#.#|#.#|###|",
    "------------------------------------",
    "###|###|#.#|#.#|#.#|#.#|#.#|#.#|#.#|",
    "...|...|#.#|#..|#.#|...|..#|#..|#.#|",
    "#.#|#.#|#.#|###|#.#|###|#.#|#.#|#.#|",
    "------------------------------------",
    "#.#|#.#|#.#|#.#|#.#|#.#|#.#|#.#|#.#|",
    "#..|#..|..#|#..|..#|#.#|..#|#..|..#|",
    "#.#|#.#|#.#|#.#|#.#|#.#|#.#|#.#|#.#|",
    "------------------------------------",
    "#.#|#.#|#.#|###|#.#|###|###|###|#.#|",
    "..#|..#|#..|...|...|...|...|...|...|",
    "###|#.#|###|#.#|###|#.#|#.#|#.#|###|",
    "------------------------------------",
    "###|#.#|###|#.#|###|#.#|###|#.#|###|",
    "#..|..#|#..|#..|...|#..|...|#..|...|",
    "#.#|###|#.#|#.#|#.#|###|###|#.#|#.#|",
    "------------------------------------",
    "###|#.#|###|#.#|#.#|#.#|#.#|#.#|#.#|",
    "..#|#..|...|...|#.#|#..|..#|...|#.#|",
    "#.#|#.#|###|###|#.#|#.#|#.#|###|#.#|",
    "------------------------------------",
    "#.#|#.#|###|###|#.#|#.#|#.#|###|#.#|",
    "#..|...|...|...|#.#|#..|..#|...|..#|",
    "###|###|#.#|###|#.#|###|#.#|###|#.#|",
    "------------------------------------",
    "###|###|#.#|#.#|#.#|#.#|#.#|#.#|#.#|",
    "...|...|#.#|#..|#..|...|..#|#..|#.#|",
    "#.#|#.#|#.#|###|#.#|###|#.#|#.#|#.#|",
    "------------------------------------",
    "#.#|#.#|#.#|###|#.#|###|###|###|#.#|",
    "..#|..#|#..|...|...|...|...|...|...|",
    "###|#.#|###|#.#|###|#.#|#.#|#.#|###|",
    "------------------------------------" };
}

StaticGraph GraphBuilder::buildGraphFromText(std::vector<std::string> lines) {
    size_t extent{ lines.size() / 4 };
    StaticGraph graph{ extent };
    for (int row = 0; row < extent; row++) {
        for (int column = 0; column < extent; column++) {
            std::string out_paths;
            if (lines[first(row)][second(column)] == '.') {
                out_paths += "N";
            }
            if (lines[second(row)][third(column)] == '.') {
                out_paths += "E";
            }
            if (lines[third(row)][second(column)] == '.') {
                out_paths += "S";
            }
            if (lines[second(row)][first(column)] == '.') {
                out_paths += "W";
            }
            graph.setOutPaths(Location(row, column), out_paths);
        }
    }
    return graph;
}

}