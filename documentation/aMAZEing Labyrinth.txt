bis 11.11. In VueJS einlesen. Architektur für Spiel überlegen. Projekt aufsetzen.
bis 18.11. Board + Shifting moves. Python? Welches Framework? asynchronität?
bis 25.11. Basic Frontend für Maze. git lokal. Web service überlegen. RESTful? Wie?su
bis 2.12. MVP (Client-Server). Github o.Ä. (klären ob legal möglich - copyright? Welche Lizenz?)
bis 9.12. Simple KI
bis 16.12. Player vs. Player fertig (volle Regeln, Spielfortschritt)
bis 23.12. bessere KI
bis 30.12. Präsentation überlegen, 
bis 6.1. Frontend verbessern 
bis 13.1. noch bessere KI
bis 20.1. Präsentation fertigstellen, evtl. theoretische Informatik wiederholen. 
25.1. Innovation Space (IS2019 version)

Paper: http://drops.dagstuhl.de/opus/volltexte/2018/8821/

Read:
https://vuejs.org/v2/cookbook/using-axios-to-consume-apis.html

Full Stack:
https://codeburst.io/creating-a-full-stack-web-application-with-python-npm-webpack-and-react-8925800503d9

State:
https://facebook.github.io/flux/
https://github.com/vuejs/vuex
https://vuejs.org/v2/guide/state-management.html - time travel debugging
 


MVP:

Backlog:
Tiles zeigen ausreichend schöne Bilder

Server - Initialen Zustand ladbar machen (Textdatei, erstellt über Texteditor)

Server verwaltet ein komplettes Spiel

